name: Release
on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]
jobs:
  unit-test:
    name: "Unit Tests"
    if: "!startsWith(github.event.head_commit.message, 'Bump version in package.json to ')"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install dependencies"
        run: yarn --frozen-lockfile
      - name: "Run Unit Tests"
        run: yarn test-unit

  build:
    name: "Build"
    needs: unit-test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install dependencies"
        run: yarn --frozen-lockfile
      - name: "Replace package.json with new version"
        run: ./ci/replace_version.sh
      - name: "Build applications"
        run: yarn electron-build
        env:
          GH_TOKEN: ${{ github.token }}
      - name: "Upload dmg"
        uses: actions/upload-artifact@v3
        with:
          name: "dmg"
          path: dist/remote-mower-*.dmg
          if-no-files-found: error
      - name: "Upload exe"
        uses: actions/upload-artifact@v3
        with:
          name: "exe"
          path: dist/Remote Mower*.exe
          if-no-files-found: error

  e2e-test-macos:
    name: "E2E tests - macOS"
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: "dmg"
          path: dist
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install dependencies"
        run: yarn --frozen-lockfile
      - name: "Run E2E Tests"
        shell: bash
        run: |
          export CURRENT_VERSION=$(./ci/get_build_version.sh)
          export APP_PATH="/Volumes/Remote Mower $CURRENT_VERSION/Remote Mower.app/Contents/MacOS/Remote Mower"
          export DMG_NAME="dist/remote-mower-$CURRENT_VERSION.dmg"
          sudo hdiutil attach $DMG_NAME

          mkdir e2e/screenshots

          yarn test-e2e
      - name: "Upload failed tests screenshots"
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: "macOsScreenshots"
          path: e2e/screenshots

  e2e-test-windows:
    name: "E2E tests - Windows"
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: "exe"
          path: dist
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install dependencies"
        run: yarn
      - name: "Run E2E Tests"
        shell: bash
        run: |
          export CURRENT_VERSION=$(./ci/get_build_version.sh)
          export APP_PATH="dist/Remote Mower $CURRENT_VERSION.exe"

          mkdir e2e/screenshots

          yarn test-e2e --verbose
      - name: "Upload failed tests screenshots"
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: "windowsScreenshots"
          path: e2e/screenshots

  deploy:
    name: "Deploy"
    if: "(startsWith(github.event.head_commit.message, '[finish') || startsWith(github.event.head_commit.message, '[fix')) && github.event_name == 'push'"
    needs:
      - e2e-test-macos
      - e2e-test-windows
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Install Node.js 14.19.0"
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: "Install dependencies"
        run: yarn --frozen-lockfile
      - name: "Replace package.json with new version"
        run: ./ci/replace_version.sh
      - name: "Build and publish applications"
        run: yarn publish-app
        env:
          GH_TOKEN: ${{ github.token }}
          MAPS_KEY: ${{ secrets.MAPS_KEY }}
      - name: "Finalize release"
        run: ./ci/finalize_release.sh ${{ github.sha }}
        env:
          GH_TOKEN: ${{ github.token }}